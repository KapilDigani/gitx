pipeline:
  name: sudartest
  identifier: sudartest
  projectIdentifier: TF_Test_Sudar
  orgIdentifier: default
  tags:
    name: mohit
    type: prod
    test: Ershad
    keying: shantelle
    test2: <+pipeline.name>
  stages:
    - stage:
        name: approval
        identifier: approval
        description: ""
        type: Approval
        spec:
          execution:
            steps:
              - step:
                  name: approval step
                  identifier: approval_step
                  type: HarnessApproval
                  timeout: 1d
                  spec:
                    approvalMessage: |-
                      Please review the following information
                      and approve the pipeline progression
                    includePipelineExecutionHistory: true
                    approvers:
                      minimumCount: 1
                      disallowPipelineExecutor: false
                      userGroups:
                        - account.ProductManagement
                    approverInputs:
                      - name: testinput
                        defaultValue: ""
        tags: {}
        when:
          pipelineStatus: Success
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: Retry
                spec:
                  retryCount: 2
                  retryIntervals:
                    - 10w
                  onRetryFailure:
                    action:
                      type: Abort
    - parallel:
        - stage:
            name: Custom
            identifier: Custom
            description: ""
            type: Custom
            spec:
              execution:
                steps:
                  - step:
                      type: ShellScript
                      name: ShellScript_1
                      identifier: ShellScript_1
                      spec:
                        shell: Bash
                        source:
                          type: Inline
                          spec:
                            script: echo "helllo"
                        environmentVariables: []
                        outputVariables: []
                        executionTarget: {}
                      timeout: 10m
                  - step:
                      type: HarnessApproval
                      name: HarnessApproval_1
                      identifier: HarnessApproval_1
                      spec:
                        approvalMessage: Please review the following information and approve the pipeline progression
                        includePipelineExecutionHistory: true
                        isAutoRejectEnabled: false
                        approvers:
                          userGroups:
                            - account.ProductManagement
                          minimumCount: 1
                          disallowPipelineExecutor: false
                        approverInputs: []
                      timeout: 1d
                  - step:
                      type: TerraformPlan
                      name: TerraformPlan_1
                      identifier: TerraformPlan_1
                      spec:
                        provisionerIdentifier: testid
                        configuration:
                          command: Apply
                          configFiles:
                            store:
                              spec:
                                connectorRef: gitlabconnector
                                repoName: " TestProj"
                                gitFetchType: Branch
                                branch: main
                                folderPath: test.tf
                              type: GitLab
                          secretManagerRef: <+input>
                      timeout: 10m
            tags: {}
            delegateSelectors: <+input>
            when:
              pipelineStatus: Success
        - stage:
            name: Test2
            identifier: Test2
            description: ""
            type: Custom
            spec:
              execution:
                steps:
                  - step:
                      type: HarnessApproval
                      name: HarnessApproval_1
                      identifier: HarnessApproval_1
                      spec:
                        approvalMessage: Please review the following information and approve the pipeline progression
                        includePipelineExecutionHistory: true
                        isAutoRejectEnabled: false
                        approvers:
                          userGroups:
                            - account.ProductManagement
                          minimumCount: 1
                          disallowPipelineExecutor: false
                        approverInputs: []
                      timeout: 1d
            tags: {}
        - stage:
            name: Test3
            identifier: Test3
            description: ""
            type: Custom
            spec:
              execution:
                steps:
                  - step:
                      type: HarnessApproval
                      name: HarnessApproval_1
                      identifier: HarnessApproval_1
                      spec:
                        approvalMessage: Please review the following information and approve the pipeline progression
                        includePipelineExecutionHistory: true
                        isAutoRejectEnabled: false
                        approvers:
                          userGroups:
                            - account.ProductManagement
                          minimumCount: 1
                          disallowPipelineExecutor: false
                        approverInputs: []
                      timeout: 1d
            tags: {}
    - stage:
        name: child
        identifier: child
        description: ""
        type: Pipeline
        spec:
          org: default
          pipeline: Approval_Pipeline
          project: TF_Test_Sudar
          outputs: []
          inputs:
            identifier: Approval_Pipeline
            stages:
              - stage:
                  identifier: customs3
                  type: Custom
                  spec:
                    execution:
                      steps:
                        - step:
                            identifier: ShellScript_1
                            type: ShellScript
                            spec:
                              environmentVariables:
                                - name: input4
                                  type: String
                                  value: sdsd
                            timeout: 10s
        tags: {}
        variables:
          - name: test234
            type: String
            description: sdfs
            required: false
            value: <+input>.executionInput()
    - stage:
        name: deploystage
        identifier: deploystage
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: echo <+serviceVariables.ServiceVar>
                    environmentVariables:
                      - name: test
                        type: Number
                        value: <+input>
                    outputVariables: []
                    includeInfraSelectors: <+input>
                  timeout: 10m
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
          services:
            values: <+input>
            metadata:
              parallel: false
          environmentGroup:
            envGroupRef: envgroup1
            metadata:
              parallel: true
            deployToAll: true
            environments: <+input>
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: Retry
                spec:
                  retryCount: 2
                  onRetryFailure:
                    action:
                      type: Ignore
    - stage:
        name: template
        identifier: template
        template:
          templateRef: approvaltemplate
          versionLabel: v1
          templateInputs:
            type: Custom
            spec:
              execution:
                steps:
                  - step:
                      identifier: httpstep
                      type: Http
                      spec:
                        inputVariables:
                          - name: testinput
                            type: String
                            value: <+input>
                  - step:
                      identifier: ShellScript_1
                      type: ShellScript
                      spec:
                        source:
                          type: Inline
                          spec:
                            script: <+input>
    - stage:
        name: deploy2
        identifier: deploy2
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: SudarService
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  variables:
                    - name: ServiceVar
                      type: String
                      value: <+input>
          environment:
            environmentRef: test_envi
            deployToAll: false
            infrastructureDefinitions:
              - identifier: vl_infra_dummy
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
    - stage:
        name: buildstage
        identifier: buildstage
        description: ""
        type: CI
        spec:
          cloneCodebase: false
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.Harness_Kubernetes_Cluster
              namespace: test
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    connectorRef: testttaws
                    image: test
                    shell: Sh
                    command: echo "hello"
    - stage:
        name: test
        identifier: test
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: <+input>
            serviceInputs: <+input>
          environment:
            environmentRef: <+input>
            deployToAll: false
            environmentInputs: <+input>
            serviceOverrideInputs: <+input>
            infrastructureDefinitions: <+input>
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: echo "hello"
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
            rollbackSteps: []
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: Abort
  variables:
    - name: input_set_name_with_long_name_and_longer_name
      type: String
      description: Descriptive stuff
      required: true
      value: <+input>
    - name: input_set_name2
      type: String
      description: ""
      required: true
      value: input_preprod
    - name: input_set_name3
      type: String
      description: ""
      value: <+input>.allowedValues(aa,bb,cc,)
    - name: required_variable
      type: String
      description: ""
      required: false
      value: "10"
  allowStageExecutions: true
  flowControl:
    barriers:
      - name: testbarrier
        identifier: testbarrier
  notificationRules:
    - name: test
      identifier: test
      pipelineEvents:
        - type: StageFailed
          forStages:
            - approval
        - type: StageSuccess
          forStages:
            - approval
      notificationMethod:
        type: Email
        spec:
          userGroups: []
          recipients:
            - sudarshan.purohit@harness.io
      enabled: true
